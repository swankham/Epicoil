<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Epicor.Mfg.IF.IARInvoice</name>
    </assembly>
    <members>
        <member name="T:Epicor.Mfg.BO.ARInvGetDepDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDepDataSet.ARInvGetDepDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDepDataSet.ARInvGetDepRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDepDataSet.ARInvGetDepRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARSelectedDropShipDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARUninvoicedDropShipDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARSelectedDropShipRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARUninvoicedDropShipRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARSelectedDropShipRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetDropShipDataSet.ARUninvoicedDropShipRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetFSContDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetFSContDataSet.ARInvGetFSContDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetFSContDataSet.ARInvGetFSContRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetFSContDataSet.ARInvGetFSContRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetLinesDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetLinesDataSet.ARInvGetLinesDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetLinesDataSet.ARInvGetLinesRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetLinesDataSet.ARInvGetLinesRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetMilestoneDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetMilestoneDataSet.ARInvGetMilestoneDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetMilestoneDataSet.ARInvGetMilestoneRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetMilestoneDataSet.ARInvGetMilestoneRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetPBDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetPBDataSet.ARInvGetPBDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetPBDataSet.ARInvGetPBRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetPBDataSet.ARInvGetPBRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRecInvSourceDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRecInvSourceDataSet.ARInvGetRecInvSourceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRecInvSourceDataSet.ARInvGetRecInvSourceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRecInvSourceDataSet.ARInvGetRecInvSourceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRMADataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRMADataSet.ARInvGetRMADataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRMADataSet.ARInvGetRMARow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetRMADataSet.ARInvGetRMARowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetShipDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetShipDataSet.ARInvGetShipDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetShipDataSet.ARInvGetShipRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvGetShipDataSet.ARInvGetShipRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPayActivityDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPaySchedDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPayActivityRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPaySchedRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPayActivityRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvPaySchedDataSet.ARInvPaySchedRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvRemindersDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvRemindersDataSet.InvcReminderDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvRemindersDataSet.InvcReminderRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvRemindersDataSet.InvcReminderRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCAddressDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCMessageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCAddressRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCMessageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCAddressRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ETCAddrValidationDataSet.ETCMessageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.AllocDepositDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcChrgDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDeferredRevDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlRaschDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcMiscDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcTaxDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlTGLCDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.HedTaxSumDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.TaxConnectStatusDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.AllocDepositRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcChrgRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDeferredRevRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlRaschRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcMiscRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcTaxRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlTGLCRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.HedTaxSumRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.TaxConnectStatusRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcHeadAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.AllocDepositRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcChrgRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDeferredRevRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlRaschRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcMiscRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcTaxRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.InvcDtlTGLCRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.HedTaxSumRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.ARInvoiceDataSet.TaxConnectStatusRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.IF.IARInvoice">
            <summary>
            AR Invoice entry
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcHead(Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcHeadAttch(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcDtl(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcDtlAttch(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcChrg(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcDtlRasch(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcMisc(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcTax(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcDtlTGLC(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.DeleteByID(System.Int32)">
            <summary>
            Deletes a row given its ID.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetByID(System.Int32)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetList(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a list of rows that satisfy the where clause.
            </summary>
            <param name="whereClause">An expression used to filter the rows. Can be left blank for all rows.</param>
            <param name="pageSize">The maximum number of rows to return. Leave as zero for no maximum.</param>
            <param name="absolutePage">Page of rows to return.</param>
            <param name="morePages">Whether there are more pages of rows available.</param>
            <returns>The list DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRows(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a dataset containing all rows that satisfy the where clauses.
            </summary>
            <returns>The full DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.Update(Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Commits the DataSet changes to the data store.
            </summary>
            <param name="ds">The full DataSet.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdateExt(Epicor.Mfg.BO.UpdExtARInvoiceDataSet,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            Apply input data to BO by calling GetByID/GetNew/Update methods.
            </summary>
            <returns>The dataset with list of errors occured during update process.</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetCodeDescList(System.String,System.String)">
            <summary>
            To return the CodeDescriptionList values of a given table.field.
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetCustNum(System.String,System.Int32@)">
            <summary>
            Receives CustId, returns CustNum
            </summary>
            <param name="ipCustID"> Customer ID</param>
            <param name = "opCustNum">Returns Customer Num</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CalcTaxes(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Boolean@,System.String@,System.Boolean@)">
             <summary>
            
             </summary>
             <param name="ipQuoteNum">Quote Number</param>
             <param name="ipOrderNum">Order Number.</param>
             <param name="ipInvoiceNum">Invoice Number.</param>
             <param name="ipAPInvKey">AP Invoice Number.</param>
             <param name="ipCashHeadNum">Cash Receipt Number.</param>
             <param name="ipPayHeadNum">Payment Number.</param>
             <param name="ipShipPackNum">Shipment Number.</param>
             <param name="ipEmpID">Employee ID.</param>
             <param name="ipEmpExpenseNum">Employee Expense Number.</param>
             <param name="opCommFailure"> Comm Failure </param>
             <param name="opMessage">Message</param>
             <param name="opTCStatus">TC Status</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetAvailTranDocTypes(System.String@)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GenerateRebateInv(System.String,System.String,System.String@,Epicor.Mfg.BO.RebateInvDataSet)">
            <summary>
            This method create the invoices for the rebates selected.
            </summary>
            <param name="invoiceType">Type of invoice, AP or AR</param>
            <param name="groupID">Invoice Group to generate the invoices in</param>
            <param name="opMsg">tax connect message</param>
            <param name="ds" type="Epicor.Mfg.BO.RebateInvDataSet">List of rebates available for invoicing</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRebateInvList(System.String)">
            <summary>
            This method returns a list of rebates available for invoicing.
            </summary>
            <param name="invoiceType">Type of invoice, AP or AR</param>
            <returns type="Epicor.Mfg.BO.RebateInvDataSet">List of rebates available for invoicing</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.AssignLegalNumber(System.Int32,Epicor.Mfg.BO.LegalNumGenOptsDataSet,System.String@)">
            <summary>
            Assigns a legal number to the invoice.
            </summary>
            <param name="ipInvoiceNum">Invoice number</param>
            <param name="ds" type="Epicor.Mfg.BO.LegalNumGenOptsDataSet"></param>
            <param name="opLegalNumMsg">Legal number message</param>
            <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">The Miscellaneous Shipment data set </returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CashRecGetInvoices(System.Nullable{System.DateTime},System.String)">
            <summary>
            This procedure returns the invoices to Cash Receipt Entry
            </summary>
            <param name="payDay">Payment date.</param>
            <param name="whereClause">Where clause for Cash Receipt.</param>
            <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.ChangeIncomeTaxCode(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Performs required logic when InvcDtl.IncomeTaxCode is modified.
            </summary>
            <param name="ipIncomeTaxCode">Proposed input value of Income Tax Code</param>
            <param name="ds"> ARInvoice data set </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CheckAmortSchedules(Epicor.Mfg.BO.ARInvoiceDataSet,System.String@)">
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
            <param name="opGenMessage">text UI prompts user with if schedules are to be generated</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CheckDocumentIsLocked(System.String,System.Boolean,System.Boolean@)">
            <summary>
            Method to call when it is necessary to check if document is lock, before doing smth.
            </summary>
            <param name="keyValue">InvoiceNum</param>
            <param name="showError">true/false to show error message box if doc is locked</param>
            <param name="isLocked">true if doc is locked.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CheckGroupIsLocked(System.String,System.Boolean,System.Boolean@,System.String@)">
            <summary>
            Method to call when it is necessary to check if document is lock, before doing smth.
            </summary>
            <param name="keyValue">GroupID</param>
            <param name="showError">true/false to show error message box if group is locked</param>
            <param name="isLocked">true if group is locked.</param>
            <param name="lockedStatus">Locked status: Not Posted, Posting, Reviewing.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CheckLtrOfCredit(System.Int32,System.String,System.Decimal,System.String@)">
             <summary>
            
            
            
             </summary>
             <param name="iInvoiceNum">Invoice number</param>
             <param name="cARLOCID">Letter of Credit ID</param>
             <param name="dTotalCharges">OrderHed.TotalCharges</param>
             <param name="outMsg">Output message</param>
             <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">The AR Invoice data set</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CopyInvoiceLines(System.Int32,System.Int32,System.Boolean,System.Boolean,Epicor.Mfg.BO.ARInvGetLinesDataSet)">
            <summary>
            Copy Invoice lines from source invoice to ttInvc tables
            </summary>
            <param name="sourceInvoiceNum">Invoice num which should be cancelled</param>
            <param name="destInvoiceNum">Destination invoice number</param>
            <param name="recalculateTaxes"></param>
            <param name="reverseSignQty"></param>
            <param name="ds"></param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CreateCorrectionInvoice(System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.Boolean,System.Int32@)">
            <summary>
            Creates a correction invoice from a another invoice.
            </summary>
            <param name="groupID">Current group for new invoice</param>
            <param name="sourceInvoiceNum">Invoice num which should be corrected</param>
            <param name="newInvoiceDate">Date of new invoice</param>
            <param name="newDocType">Document Type for the new invoice</param>
            <param name="recalculateTaxes">Flag to indicate if is necessary to recalculate taxes</param>
            <param name="opNewInvoiceNum">Correction Invoice Num</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CreateInvFromDep(System.String,System.String,System.String@,System.String@,System.String@,System.Decimal@)">
            <summary>
            Creates deposit invoices from deposit payments.
            The list of deposit payments should be ~ delimited.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="payments">The list of deposit payments</param>
            <param name="invoices">Invoice numbers generated delimited by a ~.</param>
            <param name="errors">Errors that may have occured during the processing</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.CurrSymbolByInvcNum(System.Int32,System.String@,System.String@)">
            <summary>
            Loads currency symbol by invoice num.
            </summary>
            <param name="invoiceNum">The invoice number </param>
            <param name="vCurrCode">Currency symbol</param>
            <param name="vCurrSymbol">Currency symbol</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.DeleteAmortizationSchedule(System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipResetDefRevFlag">indicates if the invcdtl.DeferredRev is to be reset</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.DeleteMaster(Epicor.Mfg.BO.ARInvoiceDataSet,System.String,System.String,System.Decimal@)">
            <summary>
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
            <param name="cGroupID">current APInvGrp GroupID</param>
            <param name="keyValue">VendorNum</param>
            <param name="grpTotalInvAmt">return new TotalInvAmt to update APInvGrp in UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.DeselectSelectedDropShipments(Epicor.Mfg.BO.ARInvGetDropShipDataSet)">
            <summary>
            Method to call to deselect selected drop shipments.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></param>
            <returns type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.EnableARDates(System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            This method return wish dates have to be enable on AR Invoice.
            </summary>
            <param name="enApplyDate">Enable Apply Date.</param>
            <param name="enShipDate">Enable Shipment Date.</param>
            <param name="enTaxPDate">Enable Tax Point Date.</param>
            <param name="enTaxRDate">Enable Tax Rate Date.</param>
            <param name="enCurrRDate">Enable Currency Rate Date.</param>
            <param name="enTaxRCDate">Enable Tax Rate Date for credits.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.ETCValidateAddress(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            Call tax integration and loads temp tables from the results.
            </summary>
            <returns type="Epicor.Mfg.BO.ETCAddrValidationDataSet">The ETCAddrValidation data set </returns>
            <param name="invoiceNum">InvcHead.InvoiceNum</param>
            <param name="invoiceLine">InvcDtl.InvoiceLine</param>
            <param name="statusFlag">Set to true if the integration is up, false if down.</param>
            <param name="errorFlag">If true, an error occured.</param>
            <param name="errorMsg">If Error Flag is true, this is the associated message.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GenerateAmortizationSchedule(Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetARUninvoicedDropShipments(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to call to get uninvoiced receipts for Receipt billing.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custNums">A list customer numbers </param>
            <param name="plantChoice">Current or All </param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <param name="onlyNotInvoiced">All or Only Only Not Invoiced for better perfomance </param>
            <returns type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetAvailTurkeyTranDocTypes(System.String,System.Boolean,System.String@)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetAvailNOEInvoiceTranDocTypes(System.Boolean,System.String,System.Boolean,System.String,System.String,System.String@,System.String@)">
            <summary>
            This method creates list of TranDocType depending on EInvoice property
            </summary>
            <param name="ipEInvoice">E-Invoice flag</param>
            <param name="ipSysTranType">System Transaction Type</param>
            <param name="ipCreditMemo">Is Credit Memo</param>
            <param name="ipBTCustID">Bill To Customer ID</param>
            <param name="ipinvType">Invoice Type</param>
            <param name="opListAvailTranDocTypes">List of TranDocType</param>
            <param name="opDefTranDocType">Default transaction Type</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetByBOEInvoiceNum(System.Int32)">
            <summary>
            This method finds the invoice for Bill of Exchange
            </summary>
            <param name="invoiceNum">The invoice num</param>
            <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">The AR Invoice data set </returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetCancellationInvoice(System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.Boolean)">
            <summary>
            Creates new credit memo invoice as cancellation invoice.
            </summary>
            <param name="groupID">Current group for new invoice</param>
            <param name="sourceInvoiceNum">Invoice num which should be cancelled</param>
            <param name="newInvoiceDate">Date of new invoice</param>
            <param name="newDocType"></param>
            <param name="recalculateTaxes"></param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetCurrencyBase(System.String@)">
            <summary>
            This method returns the Base Currency
            </summary>
            <param name="opCurrencyBase">Base Currency</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetDefaultAccount(System.String,System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Gets default account for a line.
            </summary>
            <param name="groupID">Group ID</param>
            <param name="invoiceNum">Invoice number</param>
            <param name="invoiceLine">Invoice line number</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetDepositsToConvert(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Method selects deposit payments for specified customers and the earliest payment date.
            </summary>
            <param name="custNums">A list customer numbers </param>
            <param name="fromDate">The earliest date of deposit payments</param>
            <param name="toDate">The last date of deposit payments</param>
            <returns type="Epicor.Mfg.BO.ARInvGetDepDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetDropShipments(Epicor.Mfg.BO.ARInvGetDropShipDataSet,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@,System.String@,System.String@,System.Decimal@)">
            <summary>
            Creates invoices for Drop Shipments.
            The list of customers should be a ~ delimited list of customer numbers.
            The Plant should be either the string "CURRENT" or "ALL".
            The invoice numbers are in a ~ delimited list.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></param>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="plant">the string "CURRENT" or "ALL".</param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <param name="consolidatePS">If true, consolidate all selected invoices with existing</param>
            <param name="invoices">Invoice numbers generated delimited by a ~.</param>
            <param name="errors">Errors that may have occured during the processing</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetFSCalls(System.String,System.String,System.String,System.Int32@,System.Decimal@)">
            <summary>
            Creates an FS Call invoice. The list of customers should be a ~ delimited
            list of customer numbers. The Plant should be either the string "CURRENT" or "ALL".
            The number of invoices is an integer.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="plant">the string "CURRENT" or "ALL".</param>
            <param name="numInvs">Number of Invoices generated.</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetInvoiceLines(System.Int32)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetInvoiceReminders(System.Int32)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetInvcRecurr(System.Int32,Epicor.Mfg.BO.RecurringInvDataSet)">
            <summary>
            Invoices Recurring
            </summary>
            <param name="invoiceNum">Invoice number</param>
            <param name="ds" type="Epicor.Mfg.BO.RecurringInvDataSet">Recurring Invoices.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetLegalNumGenOpts(System.Int32,System.Boolean@)">
            <summary>
            Returns the legal number generation options.
            </summary>
            <param name="ipInvoiceNum">Packing Slip number</param>
            <param name="opPromptForNum">Prompt for the number</param>
            <returns type="Epicor.Mfg.BO.LegalNumGenOptsDataSet">The Legal Number Generation Options dataset </returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetMilestoneBilling(System.String,System.String,System.String,System.String,System.Boolean@,System.String@,System.Decimal@)">
            <summary>
            Creates Milestone billing invoices.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="selectedItems_Key1">A list of ~ delimited project numbers.</param>
            <param name="selectedItems">A list of ~ delimited project/milestone numbers.</param>
            <param name="invoicesCreated">True if invoice was created.</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetMilestoneSearch(System.String,System.String)">
            <summary>
            Search for Milestone billing that could create an invoice and return them for
            customer's selection.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <returns type="Epicor.Mfg.BO.ARInvGetMilestoneDataSet">ARInvGetMilestoneDataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetMXTaxRcptType(System.String@)">
            <summary>
            Gets the current status of the Mexican Digital Tax Receipts, valid results can be
            Disabled, CFD and CFDI
            </summary>
            <param name="mxTaxRcptType">Digital Tax Receipt Type</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewDepositType(System.String,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Creates a new InvcHead record for Deposit Billing or Deposit
            Billing Credit Memo based on Deposit Billing type.
            This method is separate from GetNewInvcHeadType so security can be
            set on deposit invoices.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="depositBillType">Deposit Billing type. Valid types are
            DEPOSIT-BILL- Deposit invoice.
            DEPOSIT-MEMO- Deposit credit memo invoice.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">ARInvoiceDataSet.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcHeadBOE(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Creates a new InvcHead record for Bill of Exchange.
            </summary>
            <param name="inGroupID">Group for this invoice.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetNewInvcHeadType(System.String,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Creates a new InvcHead record based on the Invoice type.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="invoiceType">Invoice type. Valid types are
            MISC-BILL - Miscelaneous invoice.
            ADV-BILL - Advanced billing.
            CREDIT-MEMO - Credit memo invoice.
            ADV-MEMO - Advanced billing credit</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetPaymentDataForViewing(System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Method to call when obtaining the payment schedule for the invoice header.
            </summary>
            <param name="invoiceNum">The invoice number </param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
            <returns type="Epicor.Mfg.BO.ARInvPaySchedDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetPBInvcSearch(System.String,System.String,System.String)">
            <summary>
            Search for Projects that could create an invoice and return them for customer's selection.
            </summary>
            <param name="ipGroupID">Group to generate invoices for.</param>
            <param name="ipPrjList">A list of ~ delimited projects.</param>
            <param name="ipInvTypes">A list of , delimited invoice types.</param>
            <returns type="Epicor.Mfg.BO.ARInvGetPBDataSet">ARInvGetPBDataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetPBInvoices(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.Decimal@)">
            <summary>
            Creates an Project invoice. The list of projects should be a ~ delimited.
            </summary>
            <param name="ipGroupID">Group to generate invoices for.</param>
            <param name="ipPrjList">A list of ~ delimited Temp Invoice Numbers of Projects.</param>
            <param name="ipInvTypes">A list of , delimited invoice types.</param>
            <param name="opInvcList">Invoice numbers generated delimited by a ~ delimiter.</param>
            <param name="opErrorList">Errors that may have occured during the processing.</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRecurBill(System.String,System.String,System.String,System.Boolean@,System.String@,System.Decimal@)">
            <summary>
            Creates a re occurring invoice.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="custList">A list of ~ delimited customer IDs.</param>
            <param name="contractList">A list of ~ delimited contract numbers.</param>
            <param name="invoicesCreated">True if invoice was created.</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRecurBillSearch(System.String)">
            <summary>
            Search for Service Contracts that could create an invoice and return them for
            customer's selection.
            </summary>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <returns type="Epicor.Mfg.BO.ARInvGetFSContDataSet">ARInvGetFSContDataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRMACredits(System.String,System.String,System.String,System.String@,System.Boolean@,System.Decimal@)">
            <summary>
            Selects InvcHead records with a group of RMACRREQ and changes the group
            to the group ID passed in. A GetList needs to be run after this process so
            the user can choose the invoice they want to process. This method returns
            a of how many invoices were converted.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="invList">A list of ~ delimited invoice numbers.</param>
            <param name="rMAMessage">Numbers of RMA's converted.</param>
            <param name="invoicesCreated">True if invoice was created.</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRMACreditsSearch(System.String)">
            <summary>
            Selects InvcHead records with a group of RMACRREQ and return them for
            customer's selection.
            </summary>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <returns type="Epicor.Mfg.BO.ARInvGetRMADataSet">ARInvGetRMADataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRecurringSourceInvoicesSearch(System.String,System.String,System.Boolean)">
            <summary>
            Selects InvcHead records and return them for customer's selection.
            </summary>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="cycleCodeList">A list of ~ delimited recurring cycle codes.</param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <returns type="Epicor.Mfg.BO.ARInvGetRecInvSourceDataSet">ARInvGetRecInvSource</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRowsContactTracker(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Calls the normal GetRows method and then constructs a custom data set combining Head/Dtl fields for the contact tracker.
            </summary>
            <param name="whereClauseInvcHead">Whereclause for InvcHead table.</param>
            <param name="whereClauseInvcHeadAttch">Whereclause for InvcHeadAttch table.</param>
            <param name="whereClauseInvcDtl">Whereclause for InvcDtl table.</param>
            <param name="whereClauseInvcDtlAttch">Whereclause for InvcDtlAttch table.</param>
            <param name="whereClauseInvcMisc">Whereclause for InvcMisc table.</param>
            <param name="whereClauseInvcTax">Whereclause for InvcTax table.</param>
            <param name="whereClauseARIHeadTax">Whereclause for ARIHeadTax table.</param>
            <param name="contactName">Contact to return data for.</param>
            <returns type="Epicor.Mfg.BO.InvcCustTrkDataSet">Epicor.Mfg.BO.InvcCustTrkDataSet</returns>
            <param name="pageSize">Page size.</param>
            <param name="absolutePage">Absolute page.</param>
            <param name="morePages">More pages.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRowsCustomerTracker(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Calls the normal GetRows method and then constructs a custom data set combining Head/Dtl fields for the customer tracker.
            </summary>
            <param name="whereClauseInvcHead">Whereclause for InvcHead table.</param>
            <param name="whereClauseInvcHeadAttch">Whereclause for InvcHeadAttch table.</param>
            <param name="whereClauseInvcDtl">Whereclause for InvcDtl table.</param>
            <param name="whereClauseInvcDtlAttch">Whereclause for InvcDtlAttch table.</param>
            <param name="whereClauseInvcMisc">Whereclause for InvcMisc table.</param>
            <param name="whereClauseInvcTax">Whereclause for InvcTax table.</param>
            <param name="whereClauseARIHeadTax">Whereclause for ARIHeadTax table.</param>
            <returns type="Epicor.Mfg.BO.InvcCustTrkDataSet">Epicor.Mfg.BO.InvcCustTrkDataSet</returns>
            <param name="pageSize">Page size.</param>
            <param name="absolutePage">Absolute page.</param>
            <param name="morePages">More pages.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetShipments(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String@,System.String@,System.String@,System.Decimal@)">
            <summary>
            Creates an Shipment invoice. The list of customers should be a ~ delimited
            list of customer numbers. The list of pack slips should be null (room for enhancement).
            The Plant should be either the string "CURRENT" or "ALL". The invoice numbers
            are in a ~ delimited list.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="packSlips">As of the initial release, null</param>
            <param name="plant">the string "CURRENT" or "ALL".</param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <param name="overBillDay">If true, create all selected invoices irrespective of the billing days</param>
            <param name="consolidatePS">If true, consolidate all selected invoices with existing</param>
            <param name="invoices">Invoice numbers generated delimited by a ~.</param>
            <param name="errors">Errors that may have occured during the processing</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.calcInvcGrpTotal(System.String,System.Decimal@)">
            <summary>
            populates grpTotalInvAmt and lEnableGenLegalNum to pass back to UI to update the APInvGrp record.
            </summary>
            <param name="cGroupID">current GroupID on Invoice</param>
            <param name="grpTotalInvAmt">return new TotalInvAmt to update APInvGrp in UI</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetRecurringInvoices(System.String,System.String,System.String,System.Int32,System.String,System.Boolean,System.String@,System.String@,System.String@,System.String@,System.Decimal@,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Creates recurrent invoices. The list of customers should be a ~ delimited
            list of customer numbers. The list of pack slips should be null (room for enhancement).
            The Plant should be either the string "CURRENT" or "ALL". The invoice numbers
            are in a ~ delimited list.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custList">A list of ~ delimited customer numbers.</param>
            <param name="cycleCodeList">A list of ~ delimited cycle Codes.</param>
            <param name="firstDayOfWeek">First day of the week on Client side.</param>
            <param name="selectedList">A list of ~ delimited source invoice numbers, selected by user.</param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <param name="invoices">Invoice numbers generated delimited by a ~.</param>
            <param name="errors">Errors that may have occured during the processing</param>
            <param name="msgNumInvoices">message displaying the number of invoices created</param>
            <param name="msgLOCErrors">message displaying errors with LOC, if existing</param>
            <param name="grpTotalInvAmt">new InvcGrp total accumulated from all invoices to update UI</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetShipmentsSearch(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to call when the search is done on GetShipments.
            CustIDs: You can specify a list of customers.
            Plant Choice: C is for current.
            </summary>
            <param name="groupID">Group to generate invoices for.</param>
            <param name="custNums">A list customer numbers </param>
            <param name="plantChoice">Current or All </param>
            <param name="billToFlag">If true, customers are bill to's. If false they are sold to's.</param>
            <param name="onlyNotInvoiced">All or Only Only Not Invoiced for better perfomance </param>
            <returns type="Epicor.Mfg.BO.ARInvGetShipDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetvalidEAD(System.String,System.String,System.Nullable{System.DateTime}@,System.String@)">
            <summary>
            </summary>
            <param name="inTransType">Source Module</param>
            <param name="inDateLabel">Date Label</param>
            <param name="proposedDate">The proposed invoice date</param>
            <param name="cMessageText">Warning messages</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.InvcGrpExists(System.String,System.Boolean@)">
            <summary>
            Checkes if InvcGrp record exists or not.
            </summary>
            <param name="groupID">Group for this invoice.</param>
            <param name="result">return true if Group exists</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.IsConvertedFromDep(System.Int32,System.Boolean@)">
            <summary>
            Returns true if deposit invoice is converted from deposit payment.
            </summary>
            <param name="invoiceNum">Invoice number.</param>
            <param name="converted">True if deposit invoice is converted from deposit payment</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.IsPMForGenPIType(System.Int32,System.Boolean@)">
             <summary>
            
             </summary>
             <param name="ipPMUID">Payment Method</param>
             <param name="ipIsGenPIType">Is invoice payment method for a generated PI Type</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.IsReturnInvoice(System.Int32,System.Boolean@)">
             <summary>
            
             </summary>
             <param name="ipInvoiceNum">Invoice Number</param>
             <param name="ipIsReturnInvoice">Is Return Invoice</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.IsCorrectionInvoice(System.Int32,System.Boolean@)">
             <summary>
            
             </summary>
             <param name="ipInvoiceNum">Invoice Number</param>
             <param name="opIsCorrectionInvoice">Is Correction Invoice</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.LoadRecordsPEInvcTax(System.String,System.Int32)">
            <summary>
            Fill Peru tables.
            </summary>
            <param name="ipGroupID">Group ID</param>
            <param name="ipInvoiceNum">Invoice Number</param>
            <returns type="Epicor.Mfg.BO.PEDetractionsDataSet">PE Detractions data set</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.MassGenerateBOEInvcDtl(System.Int32,Epicor.Mfg.BO.InvcHeadListDataSet,System.String@)">
            <summary>
            Create multiple InvcDtl for a BOE InvcHead from multiple selected invoices.
            </summary>
            <param name="ipInvoiceNum">Invoice Number</param>
            <param name="ds" type="Epicor.Mfg.BO.InvcHeadListDataSet">The selected invoices </param>
            <param name="massGenErrorMsg">Indicates if one or more selected invoices generated an error</param>
            <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">AR Invoice data set</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.MXLoadTaxRcptResults(System.Int32)">
            <summary>
            Populates the MXTaxRcptErrors and MXOriginalString tables with all the results
            for the current invoice generated by the digital tax receipt generation process.
            </summary>
            <param name="iInvoiceNum">Target invoice number</param>
            <returns type="Epicor.Mfg.BO.MXDigitalTaxRcptDataSet">Error messages</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.MXRegenReceipt(System.Int32,System.String@)">
            <summary>
            This method will regenerate the related digital receipt file (CFD or CFDI).
            This logic is not available when Mexico CSF is not enabled or the current invoice is not posted.
            </summary>
            <param name="iInvoiceNum">Target invoice number</param>
            <param name="oMessage">Result Message</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeAllocatedDepositAmt(System.Int32,System.Int32,System.String,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Voids the legal number.
            </summary>
            <param name="ipInvoiceNum">Invoice number</param>
            <param name="ipDepInvoiceNum">Deposit invoice number</param>
            <param name="ipDepGroupID">Group ID of deposit payment</param>
            <param name="ipDepHeadNum">Deposit payment</param>
            <param name="ipAllocatedAmt">Allocated amount</param>
            <param name="ds"> ARInvoice data set </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeARLOCID(System.String,System.Int32,System.String@,System.String@,System.String@,System.String@,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This procedure is used to validate the ARLOCID (AR Letter of Credit ID) for both
            AR Invoice Entry and Posted Invoice Update. The argument "ipInvoiceNum is only
            supplied when called from Posted Invoice Update. For AR Invoice Entry, if either the
            Terms or the Bill To Customer is different on the Invoice than it is on the Letter
            of Credit, a message to the user and a value for the UI to put in that field (if
            the user decides to) are passed back. When called from Posted Invoice Update, the
            Customer, Bill To Customer and the Currency must match or an error is given.
            </summary>
            <param name="ipARLOCID">The Letter of Credit ID value</param>
            <param name="ipInvoiceNum">Current Invoice number</param>
            <param name="opTermsCodeValue">The value to put in the InvcHead.TermsCode field</param>
            <param name="opTermsCodeMsg">The message to give the user if the TermsCode needs to be changed</param>
            <param name="opBTCustIDValue">The value to put in the InvcHead.BTCustID field</param>
            <param name="opBTCustIDMsg">The message to give the user if the BTCustID needs to be changed</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">The AR Invoice data set</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeBlockedFin(System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the plant is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeBOEStatus(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Default bank for payment instrument when the BOE status changes.
            </summary>
            <param name="inInvoiceNum">Invoice Number.</param>
            <param name="inNewStatus">The new status </param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeHold(System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipHold">proposed hold value</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeHoldReason(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipReason">proposed reason code</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeInvDtlUseOTS(Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Method to call when changed the UseOTS field the contract header record.
            Refreshes the address list and contact info
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeLineDefRev(System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet,System.String@)">
            <param name="ipDefRev">Input deferred revenue option</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
            <param name="opOutMsg"> out message the user is prompted for</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeLineDspWithholdAmt(System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the withhold amount on the invoice detail
            record is changed.
            </summary>
            <param name="newDspWithholdAmt">Proposed withhold amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeLineInvoiceRef(System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the InvcDtl invoice reference has been updated.
            Specific to Bill of Exchange invoices.
            </summary>
            <param name="newInvoiceRef">Proposed invoice reference.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeOfAmortDate(System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipAmortDate">Proposed Amortization Date</param>
             <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">The AR Invoice data set</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofApplyDate(System.Int32,System.Nullable{System.DateTime},System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the apply date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newApplyDate">Proposed Apply Date.</param>
            <param name="recalcamts">Recalc amount and taxes.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofApplyDateEx(System.Int32,System.Nullable{System.DateTime},System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the apply date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newApplyDate">Proposed Apply Date.</param>
            <param name="recalcamts">Recalc amount and taxes.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofChrgAmt(System.Int32,System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Calculates the amounts for Miscellaneous charges when the misc. amt. changes.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice Line Number.</param>
            <param name="seqNum">Fin charge sequence number.</param>
            <param name="newChrgAmt">Fin charge proposed amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofContact(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the contact is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newContact">Proposed Contact.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofCurrency(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            If it is a new invoice, the currency fields are set. Otherwise they are updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newCurrencyCode">The New currency code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofCustomer(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Called for change of bill to customer.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newCustomerID">Proposed customer Number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeOfDefRevStart(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <param name="ipDefRevStart">Deferred Revenue Start Date</param>
            <param name="ipInvoiceNum">invoice number</param>
            <param name="ipInvoiceLine">Invoice line number</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofDepAmt(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called after the document deposit amount has been changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="depositAmt">DepositAmt</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofDeposit(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called after the document deposit amount has been changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="dspCredit">DspCredit.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofExchangeRate(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the exchange rate is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newExchangeRate">The New exchange rate.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofFixedAmt(System.Int32,System.Int32,System.String,System.String,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the tax amount on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newTaxAmt">Proposed Tax amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofFOB(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the FOB changes.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newFOB">Proposed FOB.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofInvDate(System.Int32,System.Nullable{System.DateTime},System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the invoice date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newInvoiceDate">Proposed invoice Date.</param>
            <param name="recalcamts">Recalc amount and taxes.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofInvDateEx(System.Int32,System.Nullable{System.DateTime},System.String,System.String@,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the invoice date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newInvoiceDate">Proposed invoice Date.</param>
            <param name="recalcamts">Recalc amount and taxes.</param>
            <param name="cMessageText">Warning messages</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofInvoiceAddress(System.String,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method will set the BillToInvoiceAddress field and the SoldToInvoiceAddress
            based on the field name and value passed in. If one is true, then the other is false.
            </summary>
            <param name="fieldName">Either BillTo/SoldToInvoiceAddress.</param>
            <param name="fieldValue">True or false.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofRevisionNum(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method will set the RevisionNum field and the LastRevNum
            </summary>
            <param name="newRevisionNum">Proposed RevisionNum</param>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofInvoiceRef(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the invoice reference has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newInvoiceRef">Proposed invoice reference.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofIsRevision(System.Boolean,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method will set the RevisionNum and RevisionDate fields according to IsRevision field
            </summary>
            <param name="newIsRevision">Proposed IsRevision</param>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineAdvBill(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the advanced billing amount on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newAdvBillAmt">Proposed advanced billing amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineContact(System.Int32,System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Contact on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newContact">Proposed Contact number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineDesc(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the part description on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newPartDesc">Proposed part description.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineDiscAmt(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the discount amount on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newDiscAmt">Proposed discount amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineDiscPerc(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the discount percent on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newDiscPerc">Proposed discount percent.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineExtPrice(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the extended amount on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newExtAmt">Proposed discount amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineInvoiceLineRef(System.Int32,System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Invoice Line Reference number
            on the invoice detail record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newInvoiceLineRef">Proposed Invoice Line Reference number</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineOrderLine(System.Int32,System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the OrderLine number
            on the invoice detail record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newOrderLine">Proposed order line number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineOrderRelease(System.Int32,System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the order release number
            on the invoice detail record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newOrderRel">Proposed order release number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLinePartNum(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the part number on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newPartNum">Proposed part number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLinePricePerCode(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the price per code on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newPricePer">Proposed price per code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineProdCode(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Product code on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newProdCode">Proposed product code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineQty(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the quantity on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newQty">Proposed quantity.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineRevNum(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the revision number on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newRevNum">Proposed revision number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineSalesUM(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the sales UM on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newSalesUM">Proposed sales UM.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineShipDate(System.Int32,System.Int32,System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the ship date on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newShipDate">Proposed ship date.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeOfLineShipToCustID(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Customer ShipTo ID on the invoice detail
            record is changed.
            </summary>
            <param name="newShipToCustID">Proposed Customer ShipTo ID.</param>
            <param name="ds">AR Invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineShipToNum(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the ship to number on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newShipToNum">Proposed ship to number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineShipVia(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the ship via on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newShipVia">Proposed ship via.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineTaxCat(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Tax category on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newTaxCat">Proposed tax category.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineTaxExempt(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Tax exempt on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newTaxExempt">Proposed tax exempt.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineTaxRgn(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Tax Region on the invoice detail
            record is changed.
            </summary>
            <param name="iTaxRegionCode">Proposed tax category.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLineUnitPrice(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the unit price on the invoice detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newUnitPrice">Proposed unit price.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLinkedInvcUnitPrice(System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Linked invoice unit price on the BoE detail
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="newLinkedUnitPrice">Proposed unit price.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofLockRate(System.Int32,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the invoice lock rate has been changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newLockRate">Proposed invoice lock rate.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofManualTax(System.Int32,System.Int32,System.String,System.String,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the manual tax switch on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newManualTax">Proposed Manual tax.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofMiscAmt(System.Int32,System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Calculates the amounts for Miscellaneous charges when the misc. amt. changes.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice Line Number.</param>
            <param name="seqNum">Misc charge sequence number.</param>
            <param name="newMiscAmt">Misc charge proposed amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofMiscCode(System.Int32,System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Obtains defaults from the MiscCode table. This method needs to be called when
            a code is being changed or after a new InvcMisc record is obtained.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice Line Number.</param>
            <param name="seqNum">Misc charge sequence number.</param>
            <param name="newMiscCode">New miscellaneous code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofMiscPrcnt(System.Int32,System.Int32,System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Calculates the amounts for Miscellaneous charges when the misc. percentage changes.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice Line Number.</param>
            <param name="seqNum">Misc charge sequence number.</param>
            <param name="newPrcnt">Misc charge proposed percentage.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofOrderNum(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the Order number has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newOrderNum">Proposed Order number.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPayMethod(Epicor.Mfg.BO.ARInvoiceDataSet,System.Int32,System.Int32)">
            <summary>
            Method to call when changing the payment amount on the payment schedule for
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
            <param name="invoiceNum">The invoice number. </param>
            <param name="newPayMethod">The Proposed Payment method PMUID. </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPaySchedAmt(Epicor.Mfg.BO.ARInvPaySchedDataSet,System.Int32,System.Int32,System.Decimal)">
            <summary>
            Method to call when changing the payment amount on the payment schedule for
            the invoice header. All ARInvPaySched temp table records must be marked as
            'dirty' so they will pass through the framework.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvPaySchedDataSet"></param>
            <param name="invoiceNum">The invoice number. </param>
            <param name="lineNumber">The line number or sequence number. </param>
            <param name="newPayAmt">The Proposed Pay Sched Amount. </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPaySchedDate(Epicor.Mfg.BO.ARInvPaySchedDataSet,System.Int32,System.Int32)">
            <summary>
            Method to call when changing the payment date on the payment schedule for
            the invoice header. All ARInvPaySched temp table records must be marked as
            'dirty' so they will pass through the framework.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvPaySchedDataSet"></param>
            <param name="invoiceNum">The invoice number. </param>
            <param name="lineNumber">The line number or sequence number. </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPECharges(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.PECharges is changed.
            </summary>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipPECharges">Bank PECharges amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPECommissions(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.PECommissions is changed.
            </summary>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipPECommissions">Bank PECommissions amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPEDischargeAmt(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.PEDischargeAmt is changed.
            </summary>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipPEDischargeAmt">Bank PEDischargeAmt amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPEInterest(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.PEInterest is changed.
            </summary>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipPEInterest">Bank PEInterest amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPENoPayPenalty(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.PENoPayPenalty is changed.
            </summary>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipPENoPayPenalty">Bank PENoPayPenalty amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPlant(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the plant is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newPlant">Proposed Plant.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeOfRACode(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipRACode">Deferred Revenue Code</param>
             <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofRateCode(System.Int32,System.Int32,System.String,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the tax code on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="newRateCode">Invoice line tax rate code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofRateGrpCode(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newRateGrpCode">The New currency code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofRetInvoiceNum(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
             <summary>
            Function to Update Return Invoice Number in linked RMA, if any.
             </summary>
             <param name="invoiceNum">Invoice Number.</param>
             <param name="newRetInvoiceNum">The New Return Invoice Number.</param>
             <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofSalesRep(System.Int32,System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when a sales rep code on the invoice header
            record is changed. All the line items will be updated with the new sales rep.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="repIndexNum">The index number for the rep. If it is the 2nd rep
            in the list then 2 would be passed. If it is a new rep then the last line number
            plus one would be passed. The maximum index number is 5.</param>
            <param name="newRepCode">Proposed sales rep code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofShipDate(System.Int32,System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the shipment date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newShipDate">Proposed Ship Date.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofSoldToCustID(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method returns the Sold To customer info.
            </summary>
            <param name="newSoldToCustID">Proposed sold to custid</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">The ARInvoice data set</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxableAmt(System.Int32,System.Int32,System.String,System.String,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the taxable amount on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newTaxableAmt">Proposed Taxable amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxAmt(System.Int32,System.Int32,System.String,System.String,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the tax amount on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newTaxAmt">Proposed Tax amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxCode(System.Int32,System.Int32,System.String,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the tax code on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newTaxCode">Invoice line tax code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxLock(System.Int32,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the invoice tax lock rate has been changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newLockRate">Proposed invoice tax lock rate.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxPDate(System.Int32,System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the Tax Point date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newTaxPDate">Proposed Tax Point Date.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxPercent(System.Int32,System.Int32,System.String,System.String,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the tax percent on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newPercent">Proposed Tax percent.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxRateDate(System.Int32,System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the tax rate date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newTaxRateDate">Proposed Tax Rate Date.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxRateGrpCode(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newRateGrpCode">The New currency code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxReportAmt(System.Int32,System.Int32,System.String,System.String,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the reportable amount on the invoice tax
            record is changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice line number.</param>
            <param name="taxCode">Invoice line tax code.</param>
            <param name="rateCode">Invoice line tax rate code.</param>
            <param name="newRptAmt">Proposed reportable amount.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTaxRgn(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the InvcHead.TaxRegionCode changes
            </summary>
            <param name="invoiceNum"> Invoice Number </param>
            <param name="taxRegionCode">Proposed Tax Region Code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofTermsCode(System.Int32,System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the Terms Code changes.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newTermsCode">Proposed Terms code.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeOfTransApplyDate(System.Int32,System.Nullable{System.DateTime},Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called before the transferred invoice apply date has been updated.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="newTransApplyDate">Proposed Transferred Invoice Apply Date.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofUseSOCCDefaults(System.Int32,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when the user changes the value in the
            UseSOCCdefaults. The UseSOCCdefaults allows the user to specify whether or
            not to use the sales order credit card info or enter it themselves..
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="useSOCC">Use sales order credit card defaults.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeTranDocTypeID(System.String,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Sets default values when the TranDocTypeID changes
            </summary>
            <param name="ipTranDocTypeID">TranDocTypeID supplied</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChooseofPaySched(System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            Method to call when obtaining the payment schedule for the invoice header.
            </summary>
            <param name="invoiceNum">The invoice number </param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
            <returns type="Epicor.Mfg.BO.ARInvPaySchedDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.PrePostBOEChangeStatus(System.String,System.Int32,System.Boolean,System.String@,System.String@,System.String@)">
            <summary>
            This method should be called before a BOE Invoice is posted. If the GL
            is not interfaced the user will be asked to continue Y/N. If they choose N,
            the PostInvoices method should not be called.
            </summary>
            <param name="ipGLTransType">GL transaction Type.</param>
            <param name="ipBOEInvoiceNum">BOE Invoice Number.</param>
            <param name="ipEditList">to print Edit List.</param>
            <param name="ipGroupID">Group ID generated.</param>
            <param name="glMessage">Error messages generated.</param>
            <param name="glWarning">Warning message.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.PrePostBOEInvoice(System.Int32,System.Boolean,System.String@,System.String@)">
            <summary>
            This method should be called before a BOE Invoice is posted. If the GL
            is not interfaced the user will be asked to continue Y/N. If they choose N,
            the PostInvoices method should not be called.
            </summary>
            <param name="ipBOEInvoiceNum">BOE Invoice Number.</param>
            <param name="ipTCOnline">Tax Connect status.</param>
            <param name="glMessage">Error messages generated.</param>
            <param name="glWarning">Warning message.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.PrePrintInvoices(System.String,System.Int32)">
            <summary>
            Purpose: Check if Taxes are calculated, for whole Group (ipInvoiceNum=0), or for one invoice (ipGroupID = "")
            Copied from Rpt/ARInvForm/ARInvForm.p
            </summary>
            <param name="ipGroupID">Group ID </param>
            <param name="ipInvoiceNum">Invoice Num </param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.RecalcAmortAmount(System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipProposedPct">proposed amortization percent</param>
             <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.RecalcAmortPercent(System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipProposedAmt">proposed amortization amount</param>
             <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.RecalcDeferredTotals(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.RestoreAmortizationSchedule(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipInvoiceNum">Invoice Number</param>
            <param name="ipInvoiceLine"> invoice line number</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.RMALineTax(System.Int32,System.Int32,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method creates tax lines when we create invoice from RMA Processing
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="invoiceLine">Invoice Line Number</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">ARInvoice dataset</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.SelectUninvoicedDropShipments(Epicor.Mfg.BO.ARInvGetDropShipDataSet)">
            <summary>
            Method to call to select uninvoiced drop shipments.
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></param>
            <returns type="Epicor.Mfg.BO.ARInvGetDropShipDataSet"></returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.SetReadyToCalc(System.String,System.Int32,System.Boolean,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <param name="ipGroupID">ipGroupID </param>
            <param name="ipInvoiceNum">ipInvoiceNum </param>
            <param name="ipCalcAll">ipCalcAll</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">ARInvoice dataset</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdateBOEStatus(Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called when updating a Bill of Exchange status.
            Called from AR Bill of Exchange Status Change Entry
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdateEInvoiceStatus(System.Int32,System.Boolean,System.Int32)">
            <summary>
            This method should be called when updating a eInvoice status.
            Called from AR Invoice
            </summary>
            <param name="ipInvoiceNum">Current invoice num</param>
            <param name="ipEInvoiceFlag">Whether current invoice is eInvoice or not</param>
            <param name="ipStatus">New eInvoice Status</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdateMaster(Epicor.Mfg.BO.ARInvoiceDataSet,System.String,System.String,System.Boolean,System.Boolean,System.Boolean@,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean,System.Decimal,System.Boolean,System.Decimal@,System.String@,System.String@,System.Boolean@)">
            <summary>
            </summary>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet"></param>
            <param name="cGroupID">current GroupID on Invoice</param>
            <param name="cTableName">Indicates the tableName that triggered the update</param>
            <param name="runCheckAmortSched">Indicates whether the chkAmortSchedCore method should be called</param>
            <param name="runChkLtrOfCredit">Indicates whether the chkLtrOfCredit method should be called</param>
            <param name="genAmortSched">Indicates whether Amortization schedules should be either restored or generated</param>
            <param name="lRASchedExists">value of current InvcDtl.RASchedExists field</param>
            <param name="ipInvoiceNum">current invoice num used to call chkLtrOfCredCore</param>
            <param name="ipInvoiceLine">current invoice line</param>
            <param name="cARLOCID">current ARLOCID used to call chkLtrOfCredCore</param>
            <param name="suppressUserPrompts">Indicates if user prompts should be suppressed</param>
            <param name="dTotalCharges">InvcHead.InvoiceAmt used in call to CheckLtrOfCredit</param>
            <param name="lGetDefaultAccount">Set the global variable to get the default account if the product code or part are dirty</param>
            <param name="grpTotalInvAmt">InvGrp.BaseAmount to update in UI</param>
            <param name="opGenMessage">possible output message from chkAmortSchedCore</param>
            <param name="opLtrCrdMsg">possible output message from chkLtrOfCredCore</param>
            <param name="lUpdateRan">Indicates that the Update process did run</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdateofPaySched(System.Int32,Epicor.Mfg.BO.ARInvPaySchedDataSet)">
            <summary>
            Method to call when updating the payment schedule for the invoice header.
            The only reason the
            </summary>
            <param name="invoiceNum">The invoice number </param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvPaySchedDataSet"></param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.UpdatePEInvcTax(System.String,System.Int32,System.Int32,System.String,Epicor.Mfg.BO.PEDetractionsDataSet)">
            <summary>
            Fill Peru tables.
            </summary>
            <param name="ipGroupID">Group ID.</param>
            <param name="ipInvoiceNum">Invoice Number.</param>
            <param name="ipInvoiceLine">Invoice line number.</param>
            <param name="ipTaxCode">Tax Code.</param>
            <param name="ds" type="Epicor.Mfg.BO.PEDetractionsDataSet">PE Detractions data set.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.VoidLegalNumber(System.Int32,System.String)">
            <summary>
            Voids the legal number.
            </summary>
            <param name="ipInvoiceNum">Invoice number</param>
            <param name="ipVoidedReason">Reason for the void</param>
            <returns type="Epicor.Mfg.BO.ARInvoiceDataSet">The Miscellaneous Shipment data set </returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetDefaultDepPayToDate">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.GetLegalNumByInvcRefNum(System.Int32)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IARInvoice.OnChangeofPrepDeposit(System.Int32,System.Decimal,Epicor.Mfg.BO.ARInvoiceDataSet)">
            <summary>
            This method should be called after the document deposit amount has been changed.
            </summary>
            <param name="invoiceNum">Invoice Number.</param>
            <param name="dspPrepDeposit">DspPrepDeposit.</param>
            <param name="ds" type="Epicor.Mfg.BO.ARInvoiceDataSet">A/R invoice data set.</param>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcCustTrkDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcCustTrkDataSet.InvcCustTrkDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcCustTrkDataSet.InvcCustTrkRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcCustTrkDataSet.InvcCustTrkRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.LegalNumGenOptsDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.LegalNumGenOptsDataSet.LegalNumGenOptsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.LegalNumGenOptsDataSet.LegalNumGenOptsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.LegalNumGenOptsDataSet.LegalNumGenOptsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcHeadListDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcHeadListDataSet.InvcHeadListDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcHeadListDataSet.InvcHeadListRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.InvcHeadListDataSet.InvcHeadListRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXTaxRcptErrorsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXOriginalStringDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXTaxRcptErrorsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXOriginalStringRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXTaxRcptErrorsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.MXDigitalTaxRcptDataSet.MXOriginalStringRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEHedTaxSumDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEInvcTaxDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEHedTaxSumRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEInvcTaxRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEHedTaxSumRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.PEDetractionsDataSet.PEInvcTaxRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RebateInvDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RebateInvDataSet.RebateInvDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RebateInvDataSet.RebateInvRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RebateInvDataSet.RebateInvRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RecurringInvDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RecurringInvDataSet.InvcRecurrDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RecurringInvDataSet.InvcRecurrRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.RecurringInvDataSet.InvcRecurrRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.AllocDepositDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcChrgDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDeferredRevDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlRaschDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcMiscDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcTaxDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlTGLCDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.HedTaxSumDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.TaxConnectStatusDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.AllocDepositRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcChrgRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDeferredRevRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlRaschRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcMiscRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcTaxRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlTGLCRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.HedTaxSumRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.TaxConnectStatusRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcHeadAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.AllocDepositRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcChrgRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDeferredRevRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlRaschRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcMiscRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcTaxRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.InvcDtlTGLCRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.HedTaxSumRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtARInvoiceDataSet.TaxConnectStatusRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
    </members>
</doc>
