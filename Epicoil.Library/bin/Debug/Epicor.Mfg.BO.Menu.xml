<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Epicor.Mfg.BO.Menu</name>
    </assembly>
    <members>
        <member name="T:Epicor.Mfg.BO.Menu">
            <summary>
            Client side business object for Menu.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.Proxy.MenuImpl">
            <summary>
            Identifies the menu items that are displayed on the main menu.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.#ctor(Epicor.Mfg.Core.BLConnectionPool)">
            <summary>
            Proxy constructor
            </summary>
            <param name="connPool">Connection pool</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetNewMenu(Epicor.Mfg.BO.MenuDataSet)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.DeleteByID(System.String)">
            <summary>
            Deletes a row given its ID.
            </summary>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetByID(System.String)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetList(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a list of rows that satisfy the where clause.
            </summary>
            <param name="whereClause">An expression used to filter the rows. Can be left blank for all rows.</param>
            <param name="pageSize">The maximum number of rows to return. Leave as zero for no maximum.</param>
            <param name="absolutePage">Page of rows to return.</param>
            <param name="morePages">Whether there are more pages of rows available.</param>
            <returns>The list DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRows(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a dataset containing all rows that satisfy the where clauses.
            </summary>
            <returns>The full DataSet.</returns>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.Update(Epicor.Mfg.BO.MenuDataSet)">
            <summary>
            Commits the DataSet changes to the data store.
            </summary>
            <param name="ds">The full DataSet.</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.UpdateExt(Epicor.Mfg.BO.UpdExtMenuDataSet,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            Apply input data to BO by calling GetByID/GetNew/Update methods.
            </summary>
            <returns>The dataset with list of errors occured during update process.</returns>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetCodeDescList(System.String,System.String)">
            <summary>
            To return the CodeDescriptionList values of a given table.field.
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.CopyBeforeMenuItem(System.String,System.String,System.String@,System.Boolean@)">
            <summary>
            Move or Copy one menu item (source) before another (Target)
            </summary>
            <param name="sourceMenuId">Menu ID of the sourcerp</param>
            <param name="targetMenuId">Menu ID of the Target</param>
            <param name="newMenuID">new menu ID if source is copied</param>
            <param name="bSuccess">true = successful</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.CopyToParentMenu(System.String,System.String,System.String@,System.Boolean@)">
            <summary>
            Move or Copy one menu item to the last menu item of the parent
            </summary>
            <param name="sourceMenuId">Menu ID of the sourcerp</param>
            <param name="parentMenuID">Menu ID of the parent</param>
            <param name="newMenuID">new menu ID if source is copied</param>
            <param name="bSuccess">true = successful</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRowsTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets translation for each existing Row
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRowsWebAccess(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRowsWebAccessTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessable from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRowsCRM(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessible from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.Proxy.MenuImpl.GetRowsCRMTranslated(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets Rows that that are accessable from the WEB
            </summary>
            <param name="whereClauseMenu">whereClauseSetupGrp">Where condition without the where word</param>
            <returns>The Menu data set</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="P:Epicor.Mfg.Proxy.MenuImpl.CallContext">
            <summary>
            Call context dataset
            </summary>
        </member>
        <member name="M:Epicor.Mfg.BO.Menu.#ctor(Epicor.Mfg.Core.BLConnectionPool)">
            <summary>
            Constructor
            </summary>
            <param name="connPool">Connection pool</param>
        </member>
    </members>
</doc>
